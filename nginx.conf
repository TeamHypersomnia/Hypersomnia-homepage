# This config works with nginx version: nginx/1.26.3

user ubuntu;
worker_processes auto;

events {
  use epoll;
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_tokens off;
  sendfile on;
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1000;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml text/javascript image/x-icon;
  gzip_http_version 1.0;
  gzip_vary on;
  gzip_disable msie6;

  map "$request_uri" $cors_header {
    default                          "";
    ~^/leaderboards\?format=json     "*";
    ~^/arenas\?format=json           "*";
    "/upload"                        "*";
    "/revoke_discord"                "*";
    "/geolocation"                   "*";
  }

  server {
    listen 443 quic reuseport;
    listen [::]:443 quic reuseport;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name hypersomnia.xyz www.hypersomnia.xyz;
    ssl_certificate /etc/letsencrypt/live/hypersomnia.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hypersomnia.xyz/privkey.pem;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    client_max_body_size 25M;
    add_header Alt-Svc 'h3=":443"; ma=86400';
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    if ($host = www.hypersomnia.xyz) { return 301 https://hypersomnia.xyz$request_uri;}
    location = /press { return 301 https://github.com/TeamHypersomnia/PressKit/blob/main/README.md#intro; }
    location = /credits { return 301 https://teamhypersomnia.github.io/PressKit/credits;}
    location = /steam { return 301 https://store.steampowered.com/app/2660970/Hypersomnia/; }
    location = /discord { return 301 https://discord.com/invite/YC49E4G; }
    location = /browser { return 301 https://hypersomnia.io; }

    location / {
      proxy_pass http://localhost:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      if ($cors_header = "*") {
        add_header Access-Control-Allow-Origin *;
      }
    }

    location /builds {
      alias /var/www/html/builds;
      autoindex on;
      access_log off;
    }

    location ~ ^/arenas/([^/]+)/(.+)$ {
      add_header Access-Control-Allow-Origin *;
      alias /var/www/app/public/arenas/$1/$2;
      access_log off;
    }

    location ~ ^/(robots\.txt|favicon\.ico|assets/.*)$ {
      alias /var/www/app/public/$1;
      add_header Cache-Control "public, max-age=30672000";
      access_log off;
    }

    location / {
      root /var/www/html;
      default_type application/octet-stream;
      add_header Content-Disposition "attachment";
      autoindex on;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
  }

  server {
    listen 80;
    listen [::]:80;
    server_name hypersomnia.xyz www.hypersomnia.xyz;
    return 301 https://$host$request_uri;
  }
}
